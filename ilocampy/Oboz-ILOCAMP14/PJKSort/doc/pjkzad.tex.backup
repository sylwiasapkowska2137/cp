\documentclass[zad,zawodnik,utf8]{sinol}

\title{PJKSort}
\id{PJK}
\author{Mateusz Puczel} % Autor zadania
\pagestyle{fancy}
\iomode{stdin}
\konkurs{XIV obóz informatyczny}
\etap{zaawansowana}
\day{?}
\date{??.01.2016}
\RAM{64}
 
\begin{document}
\begin{tasktext}%
Przemek nieustannie pracuje nad obozową sprawdzarką, aby działała niezawodnie i najsprawniej, jak to możliwe. Ostatnio wymyślił nowy sposób na trzykrotne
przyspieszenie działania sprawdzarki. Jednym z warunków koniecznych do działania tego sposobu jest posortowanie wszystkich do tej pory sprawdzonych zgłoszeń
po ich rezultacie -- pierwsze w kolejności powinny wystąpić wszystkie niezaakceptowane zgłoszenia, a następnie te zaakceptowane.

Przemek wymyślił ostatnio nowy algorytm sortujący swoje zgłoszenia i nazwał go PJKSort. Okazuje się, że procesor pozwala wykonywać pewne operacje jednocześnie \footnote{W rzeczywistości, procesory nie wykonują jednocześnie operacji opisanych w zadaniu.}, dzięki
czemu można znacznie zaoszczędzić na czasie algorytmu. Dokładniej, dla danego ciągu zero-jedynkowego procesor potrafi za pomocą jednej operacji zamienić
miejscami każdą jedynkę z sąsiadującym z nią bezpośrednio po prawej stronie zerem. Jeżeli bezpośrednio na prawo od jedynki jest inna jedynka, algorytm nie zamienia ich miejscami.


  \section{Wejście}
  \section{Wyjście}
Na wyjściu powinna znaleźć się jedna liczba całkowita, oznaczająca ile minimalnie wierzchołków należy usunąć z drzewa, aby było ono drzewem binarnym.

\makecompactexample

\end{tasktext}
\end{document}